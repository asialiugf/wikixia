import Layouts from 'vite-plugin-vue-layouts';
import Pages from 'vite-plugin-pages';
import Vue from '@vitejs/plugin-vue';
import VueSetupExtend from 'vite-plugin-vue-setup-extend';
import WindiCSS from 'vite-plugin-windicss';
import path from 'path';

import { defineConfig } from 'vite';
import AutoImport from 'unplugin-auto-import/vite';
import Components from 'unplugin-vue-components/vite';
import { ElementPlusResolver } from 'unplugin-vue-components/resolvers';

export default () => {
  const markdownWrapperClasses = 'prose prose-sm m-auto text-left';
  return {
    resolve: {
      alias: {
        '~/': `${path.resolve(__dirname, 'src')}/`
      }
    },
    plugins: [
      Vue(),
      AutoImport({
        resolvers: [ElementPlusResolver()]
      }),
      Components({
        resolvers: [ElementPlusResolver()]
      }),
      // https://github.com/antfu/vite-plugin-windicss
      WindiCSS({
        safelist: markdownWrapperClasses
      })
    ],
    // build: {
    //   lib: {
    //     entry: path.resolve(__dirname, 'src/index.ts'),
    //     name: 'editor',
    //     format: ['es', 'umd'],
    //     fileName: format => `editor.${format}.js`
    //   },
    //   rollupOptions: {
    //     // make sure to externalize deps that shouldn't be bundled
    //     // into your library
    //     external: ['vue', /primevue\/.+/, 'ant-design-vue'],
    //     output: {
    //       // disable warning on src/index.ts using both default and named export
    //       exports: 'named',
    //       // Provide global variables to use in the UMD build
    //       // for externalized deps
    //       globals: {
    //         vue: 'Vue'
    //       }
    //     }
    //   },
    //   emptyOutDir: false // to retain the types folder generated by tsc
    // },
    server: {
      open: true,
      fs: {
        strict: true
      }
    },
    css: {
      preprocessorOptions: {
        less: {
          javascriptEnabled: true
        }
      }
    }
  };
};

// export default defineConfig({
//   // ...
//   plugins: [
//     // ...
//     AutoImport({
//       resolvers: [ElementPlusResolver()]
//     }),
//     Components({
//       resolvers: [ElementPlusResolver()]
//     })
//   ]
// });
